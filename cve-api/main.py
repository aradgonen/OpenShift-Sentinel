from flask import Flask, json, request, jsonify
import requests

base_url = "/api/cve"
cve_api = "https://services.nvd.nist.gov/rest/json/cves/1.0?" \
          "keyword={}" \
          "&resultsPerPage=100" \
          "&cvssV3Severity" \
          "&isExactMatch"
          #"&cvssV2Severity" \

api = Flask(__name__)


def filter_cve_by_version(cves, version):
    print(version)
    return cves


@api.route(base_url + '/list', methods=['GET'])
def cve_find_by_keyword():
    keyword = request.args.get("keyword")
    version = request.args.get("version")

    if keyword is None:
        return "keyword must contain a phrase", 400

    cves = requests.get(cve_api.format(keyword))
    cves_dict = cves.json()

    if version is None:
        version = ''

    total_results_dict = {} #dictenary for a result
    single_cve_dict = {} #the dict of results
    for cve_case in cves_dict['result']['CVE_Items']:
        single_cve_dict = {}
        if version in cve_case['cve']['description']['description_data'][0]['value']\
                and len(cve_case['impact']) is not 0:
            if 'baseMetricV3' in cve_case['impact'].keys():
                cve_id = cve_case['cve']['CVE_data_meta']['ID']
                cve_details = cve_case['impact']['baseMetricV3']['cvssV3']
                single_cve_dict['attackVector'] = cve_details['attackVector']
                single_cve_dict['impact'] = cve_details['baseSeverity']
                single_cve_dict['score'] = cve_details['baseScore']
                single_cve_dict['userInteraction'] = cve_details['userInteraction']
                single_cve_dict['attackComplexity'] = cve_details['attackComplexity']
                single_cve_dict['description'] = cve_case['cve']['description']['description_data'][0]['value']

                total_results_dict[cve_id] = single_cve_dict


    return jsonify(total_results_dict)


if __name__ == '__main__':
    api.run(port=5003)
    